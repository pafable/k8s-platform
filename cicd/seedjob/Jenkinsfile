@Library('devops-libs')
_

import com.pafable.PipelineArgs
import com.pafable.seedjobArgs

final String agentLabel = 'jenkins-agent'

pipeline {
    agent {
      label "${agentLabel}"
    }

    options {
        ansiColor('xterm')
        timeout(
            time: 5,
            unit: 'MINUTES'
        )
    }

    stages {
        stage('seeding') {
            steps {
                script {
                    jobDsl removedConfigFilesAction: 'DELETE',
                    removedJobAction: 'DELETE',
                    removedViewAction: 'DELETE',
                    scriptText: """
                // apps-deployer
                        pipelineJob("${seedjobArgs.APPS_DEPLOYER.name}") {
                            description("${seedjobArgs.APPS_DEPLOYER.desc}")
                            parameters {
                                choiceParam(
                                    "${PipelineArgs.taskName}",
                                    [
                                        'create',
                                        'destroy'
                                    ],
                                    "${PipelineArgs.taskDesc}"
                                )
                            }
                            definition {
                                cpsScm {
                                    scm {
                                        git {
                                            remote {
                                                url("${seedjobArgs.APPS_DEPLOYER.repo}")
                                            }
                                            branch("${seedjobArgs.APPS_DEPLOYER.branch}")
                                        }
                                    }
                                    scriptPath("${seedjobArgs.APPS_DEPLOYER.path}")
                                    lightweight()
                                }
                            }
                            properties {
                                disableConcurrentBuilds()
                                disableResume()
                            }
                        }

                // discord-bot-builder
                        pipelineJob("${seedjobArgs.DISCORD_BOT_BUILDER.name}") {
                            description("${seedjobArgs.DISCORD_BOT_BUILDER.desc}")
                            definition {
                                cpsScm {
                                    scm {
                                        git {
                                            remote {
                                                url("${seedjobArgs.DISCORD_BOT_BUILDER.repo}")
                                            }
                                            branch("${seedjobArgs.DISCORD_BOT_BUILDER.branch}")
                                        }
                                    }
                                    scriptPath("${seedjobArgs.DISCORD_BOT_BUILDER.path}")
                                    lightweight()
                                }
                            }
                            properties {
                                disableConcurrentBuilds()
                                disableResume()
                            }
                        }

                // dns-updater
                        pipelineJob("${seedjobArgs.DNS_UPDATER.name}") {
                            description("${seedjobArgs.DNS_UPDATER.desc}")
                            parameters {
                                choiceParam(
                                    "${PipelineArgs.taskName}",
                                    [
                                        'create',
                                        'destroy'
                                    ],
                                    "${PipelineArgs.taskDesc}"
                                )
                            }
                            definition {
                                cpsScm {
                                    scm {
                                        git {
                                            remote {
                                                url("${seedjobArgs.DNS_UPDATER.repo}")
                                            }
                                            branch("${seedjobArgs.DNS_UPDATER.branch}")
                                        }
                                    }
                                    scriptPath("${seedjobArgs.DNS_UPDATER.path}")
                                    lightweight()
                                }
                            }
                            properties {
                                disableConcurrentBuilds()
                                disableResume()
                            }
                        }

                // jenkins-agent-builder
                        pipelineJob("${seedjobArgs.JENKINS_AGENT_BUILDER.name}") {
                            description("${seedjobArgs.JENKINS_AGENT_BUILDER.desc}")
                            definition {
                                cpsScm {
                                    scm {
                                        git {
                                            remote {
                                                url("${seedjobArgs.JENKINS_AGENT_BUILDER.repo}")
                                            }
                                            branch("${seedjobArgs.JENKINS_AGENT_BUILDER.branch}")
                                        }
                                    }
                                    scriptPath("${seedjobArgs.JENKINS_AGENT_BUILDER.path}")
                                    lightweight()
                                }
                            }
                            properties {
                                disableConcurrentBuilds()
                                disableResume()
                            }
                        }

                // k3s-infra-factory
                        pipelineJob("${seedjobArgs.K3S_INFRA_FACTORY.name}") {
                            description("${seedjobArgs.K3S_INFRA_FACTORY.desc}")
                            parameters {
                                choiceParam(
                                    "${PipelineArgs.taskName}",
                                    [
                                        'create',
                                        'destroy'
                                    ],
                                    "${PipelineArgs.taskDesc}"
                                )
                            }
                            definition {
                                cpsScm {
                                    scm {
                                        git {
                                            remote {
                                                url("${seedjobArgs.K3S_INFRA_FACTORY.repo}")
                                            }
                                            branch("${seedjobArgs.K3S_INFRA_FACTORY.branch}")
                                        }
                                    }
                                    scriptPath("${seedjobArgs.K3S_INFRA_FACTORY.path}")
                                    lightweight()
                                }
                            }
                            properties {
                                disableConcurrentBuilds()
                                disableResume()
                            }
                        }

                // packy
                        pipelineJob("${seedjobArgs.PACKY.name}") {
                            description("${seedjobArgs.PACKY.desc}")
                            parameters {
                                choiceParam(
                                    'DISTRO',
                                    [
                                        'debian',
                                        'oracle',
                                        'rocky',
                                        'ubuntu'
                                    ],
                                    'linux distribution'
                                )
                                choiceParam(
                                    'ISO_NAME',
                                    [
                                        'OracleLinux-R9-U4-x86_64-boot.iso',
                                        'Rocky-9.4-x86_64-boot.iso',
                                        'debian-12.7.0-amd64-netinst.iso',
                                        'ubuntu-24.04.1-live-server-amd64.iso'
                                    ],
                                    'iso names'
                                )
                                choiceParam(
                                    'PROXMOX_NODE',
                                    [
                                        'behemoth',
                                        'kraken',
                                        'leviathan'
                                    ],
                                    'proxmox nodes'
                                )
                                stringParam(
                                    'TEMPLATE_NAME',
                                    null,
                                    'template name'
                                )
                            }
                            definition {
                                cpsScm {
                                    scm {
                                        git {
                                            remote {
                                                url("${seedjobArgs.PACKY.repo}")
                                            }
                                            branch("${seedjobArgs.PACKY.branch}")
                                        }
                                    }
                                    scriptPath("${seedjobArgs.PACKY.path}")
                                    lightweight()
                                }
                            }
                            properties {
                                disableConcurrentBuilds()
                                disableResume()
                            }
                        }

                // rpm-server
                        pipelineJob("${seedjobArgs.RPM_SERVER.name}") {
                            description("${seedjobArgs.RPM_SERVER.desc}")
                            parameters {
                                choiceParam(
                                    "${PipelineArgs.taskName}",
                                    [
                                        'create',
                                        'destroy'
                                    ],
                                    "${PipelineArgs.taskDesc}"
                                )
                            }
                            definition {
                                cpsScm {
                                    scm {
                                        git {
                                            remote {
                                                url("${seedjobArgs.RPM_SERVER.repo}")
                                            }
                                            branch("${seedjobArgs.RPM_SERVER.branch}")
                                        }
                                    }
                                    scriptPath("${seedjobArgs.RPM_SERVER.path}")
                                    lightweight()
                                }
                            }
                            properties {
                                disableConcurrentBuilds()
                                disableResume()
                            }
                        }

                // eks-terraformer
                        pipelineJob("${seedjobArgs.EKS_TERRAFORMER.name}") {
                            description("${seedjobArgs.EKS_TERRAFORMER.desc}")
                            parameters {
                                choiceParam(
                                    "${PipelineArgs.taskName}",
                                    [
                                        'create',
                                        'destroy'
                                    ],
                                    "${PipelineArgs.taskDesc}"
                                )
                            }
                            definition {
                                cpsScm {
                                    scm {
                                        git {
                                            remote {
                                                url("${seedjobArgs.EKS_TERRAFORMER.repo}")
                                            }
                                            branch("${seedjobArgs.EKS_TERRAFORMER.branch}")
                                        }
                                    }
                                    scriptPath("${seedjobArgs.EKS_TERRAFORMER.path}")
                                    lightweight()
                                }
                            }
                            properties {
                                disableConcurrentBuilds()
                                disableResume()
                            }
                        }
                    """
                }
            }
        }
    }
}